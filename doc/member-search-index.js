memberSearchIndex = [{"p":"cryptoTrader.gui","c":"MainUI","l":"actionPerformed(ActionEvent)","url":"actionPerformed(java.awt.event.ActionEvent)"},{"p":"cryptoTrader.tradingBroker","c":"TradingBrokerList","l":"addBroker(TradingBroker)","url":"addBroker(cryptoTrader.tradingBroker.TradingBroker)"},{"p":"cryptoTrader.tradingBroker","c":"TradingBrokerListInterface","l":"addBroker(TradingBroker)","url":"addBroker(cryptoTrader.tradingBroker.TradingBroker)"},{"p":"cryptoTrader.tradeResult","c":"TradeResultList","l":"addResult(TradeResult)","url":"addResult(cryptoTrader.tradeResult.TradeResult)"},{"p":"cryptoTrader.tradeResult","c":"TradeResultListInterface","l":"addResult(TradeResult)","url":"addResult(cryptoTrader.tradeResult.TradeResult)"},{"p":"cryptoTrader.utils","c":"AvailableCryptoList","l":"call()"},{"p":"cryptoTrader.tradingBroker","c":"TradingBrokerList","l":"clear()"},{"p":"cryptoTrader.utils","c":"DataVisualizationCreator","l":"createCharts()"},{"p":"cryptoTrader.strategy","c":"StrategyFactory","l":"createStrategy(String)","url":"createStrategy(java.lang.String)"},{"p":"cryptoTrader.utils","c":"DataFetcher","l":"DataFetcher()","url":"%3Cinit%3E()"},{"p":"cryptoTrader.utils","c":"DataVisualizationCreator","l":"DataVisualizationCreator()","url":"%3Cinit%3E()"},{"p":"cryptoTrader.gui","c":"MainUI","l":"duplicateError(HashSet<String>)","url":"duplicateError(java.util.HashSet)"},{"p":"cryptoTrader.tradeResult","c":"TradeResult","l":"getAction()"},{"p":"cryptoTrader.utils","c":"AvailableCryptoList","l":"getAvailableCryptos()"},{"p":"cryptoTrader.tradingBroker","c":"TradingBroker","l":"getBrokerName()"},{"p":"cryptoTrader.tradingBroker","c":"TradingBrokerList","l":"getBrokers()"},{"p":"cryptoTrader.tradingBroker","c":"TradingBrokerListInterface","l":"getBrokers()"},{"p":"cryptoTrader.tradingBroker","c":"TradingBroker","l":"getCoinList()"},{"p":"cryptoTrader.tradeResult","c":"TradeResult","l":"getCoinTraded()"},{"p":"cryptoTrader.utils","c":"AvailableCryptoList","l":"getCryptoID(String)","url":"getCryptoID(java.lang.String)"},{"p":"cryptoTrader.tradeResult","c":"TradeResult","l":"getDate()"},{"p":"cryptoTrader.gui","c":"MainUI","l":"getInstance()"},{"p":"cryptoTrader.strategy","c":"StrategyA","l":"getInstance()"},{"p":"cryptoTrader.strategy","c":"StrategyB","l":"getInstance()"},{"p":"cryptoTrader.strategy","c":"StrategyC","l":"getInstance()"},{"p":"cryptoTrader.tradeHandling","c":"TradeHandler","l":"getInstance()"},{"p":"cryptoTrader.tradeResult","c":"TradeResultList","l":"getInstance()"},{"p":"cryptoTrader.tradingBroker","c":"TradingBrokerList","l":"getInstance()"},{"p":"cryptoTrader.utils","c":"AvailableCryptoList","l":"getInstance()"},{"p":"cryptoTrader.utils","c":"DataFetcher","l":"getInstance()"},{"p":"cryptoTrader.utils","c":"DataFetcher","l":"getMarketCapForCoin(String, String)","url":"getMarketCapForCoin(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.tradeResult","c":"TradeResult","l":"getPrice()"},{"p":"cryptoTrader.utils","c":"DataFetcher","l":"getPriceForCoin(String, String)","url":"getPriceForCoin(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.tradeResult","c":"TradeResult","l":"getQuantity()"},{"p":"cryptoTrader.tradingBroker","c":"TradingBroker","l":"getStrategy()"},{"p":"cryptoTrader.strategy","c":"StrategyA","l":"getStrategyName()"},{"p":"cryptoTrader.strategy","c":"StrategyB","l":"getStrategyName()"},{"p":"cryptoTrader.strategy","c":"StrategyC","l":"getStrategyName()"},{"p":"cryptoTrader.strategy","c":"StrategyInterface","l":"getStrategyName()"},{"p":"cryptoTrader.tradeResult","c":"TradeResult","l":"getStrategyName()"},{"p":"cryptoTrader.tradeResult","c":"TradeResult","l":"getTraderName()"},{"p":"cryptoTrader.utils","c":"DataFetcher","l":"getVolumeForCoin(String, String)","url":"getVolumeForCoin(java.lang.String,java.lang.String)"},{"p":"cryptoTrader.tradeHandling","c":"TradeHandler","l":"initiateTrade(ArrayList<String>, ArrayList<String[]>, ArrayList<String>)","url":"initiateTrade(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)"},{"p":"cryptoTrader.gui","c":"MainUI","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"cryptoTrader.tradeHandling","c":"TradeHandler","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"cryptoTrader.utils","c":"DataFetcher","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"cryptoTrader.strategy","c":"StrategyA","l":"performTrade(String, ArrayList<String>, HashMap<String, Double>)","url":"performTrade(java.lang.String,java.util.ArrayList,java.util.HashMap)"},{"p":"cryptoTrader.strategy","c":"StrategyB","l":"performTrade(String, ArrayList<String>, HashMap<String, Double>)","url":"performTrade(java.lang.String,java.util.ArrayList,java.util.HashMap)"},{"p":"cryptoTrader.strategy","c":"StrategyC","l":"performTrade(String, ArrayList<String>, HashMap<String, Double>)","url":"performTrade(java.lang.String,java.util.ArrayList,java.util.HashMap)"},{"p":"cryptoTrader.strategy","c":"StrategyInterface","l":"performTrade(String, ArrayList<String>, HashMap<String, Double>)","url":"performTrade(java.lang.String,java.util.ArrayList,java.util.HashMap)"},{"p":"cryptoTrader.tradingBroker","c":"TradingBrokerList","l":"removeBroker(String)","url":"removeBroker(java.lang.String)"},{"p":"cryptoTrader.tradingBroker","c":"TradingBrokerListInterface","l":"removeBroker(String)","url":"removeBroker(java.lang.String)"},{"p":"cryptoTrader.tradingBroker","c":"TradingBroker","l":"setBrokerName(String)","url":"setBrokerName(java.lang.String)"},{"p":"cryptoTrader.tradingBroker","c":"TradingBroker","l":"setCoinList(ArrayList<String>)","url":"setCoinList(java.util.ArrayList)"},{"p":"cryptoTrader.tradingBroker","c":"TradingBroker","l":"setStrategy(StrategyInterface)","url":"setStrategy(cryptoTrader.strategy.StrategyInterface)"},{"p":"cryptoTrader.strategy","c":"StrategyFactory","l":"StrategyFactory()","url":"%3Cinit%3E()"},{"p":"cryptoTrader.tradeResult","c":"TradeResult","l":"TradeResult(String, String, String, String, int, double)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,double)"},{"p":"cryptoTrader.tradingBroker","c":"TradingBroker","l":"TradingBroker(String, String[], StrategyInterface)","url":"%3Cinit%3E(java.lang.String,java.lang.String[],cryptoTrader.strategy.StrategyInterface)"},{"p":"cryptoTrader.tradeHandling","c":"TradeHandler","l":"updateBrokers(ArrayList<String>, TradingBrokerList, ArrayList<String[]>, ArrayList<String>)","url":"updateBrokers(java.util.ArrayList,cryptoTrader.tradingBroker.TradingBrokerList,java.util.ArrayList,java.util.ArrayList)"},{"p":"cryptoTrader.gui","c":"MainUI","l":"updateStats(JComponent)","url":"updateStats(javax.swing.JComponent)"}]